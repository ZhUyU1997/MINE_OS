DEFINES		+= -D__ARM32_ARCH__=7 -D__CORTEX_A8__ -D__ARM32_NEON__

WFLAGS		:= -w
OPTFLAGS	:= -O3

ifeq ("$(origin G)", "command line")
ifeq ($(G),on)
OPTFLAGS		:= -O0 -g -ggdb
endif
endif

ASFLAGS		:= -ffunction-sections -fdata-sections -fno-PIE $(WFLAGS) $(OPTFLAGS)
CFLAGS		:= -ffunction-sections -fdata-sections -fno-PIE $(WFLAGS) $(OPTFLAGS)
LDFLAGS		:= -T $(srctree)/arch/$(ARCH)/$(MACH)/kernel.lds -nostdlib --build-id=none -gc-sections

MCFLAGS		:= -std=gnu99 \
				-march=armv7-a -mtune=cortex-a8 -mfpu=neon \
				-ffreestanding -mfloat-abi=hard -fsigned-char \
				-fno-omit-frame-pointer \
				-marm -mno-thumb-interwork -mno-unaligned-access

MASFLAGS	:= -D__ASSEMBLY__
MLDFLAGS	:=

LIBDIRS		:= -L $(dir $(shell $(CC) -march=armv7-a -mtune=cortex-a9 -mfpu=neon -ffreestanding -mfloat-abi=hard -print-libgcc-file-name))
LIBS		:= -lgcc

ifeq ($(strip $(HOSTOS)),windows)
	QEMU_DIR	:= $(srctree)/../tools/qemu-system/windows
	QEMU		:= $(QEMU_DIR)/qemu-system-arm
	UNZIP		:= $(QEMU_DIR)/unzip
else
	QEMU_DIR	:= $(srctree)/../tools/qemu-system/linux
	QEMU		:= qemu-system-arm
	UNZIP		:= unzip
endif

xend:
	if [ ! -e $(QEMU_DIR)/sdcard/sdcard.img ]; then \
		mkdir -p $(QEMU_DIR)/sdcard; \
		$(UNZIP) $(QEMU_DIR)/sdcard.zip -d $(QEMU_DIR)/sdcard; \
	fi
ifneq ($(G),on)
	-@$(QEMU) -M realview-pb-a8 -m 256M \
		-name "ARM RealView Platform Baseboard for Cortex-A8" \
		-show-cursor -rtc base=localtime -serial stdio \
		-sd "$(QEMU_DIR)/sdcard/sdcard.img" \
		-net nic,macaddr=88:88:88:11:22:33,model=lan9118 -net user \
		-kernel system || true
else
	-@$(QEMU) -M realview-pb-a8 -m 256M \
		-name "ARM RealView Platform Baseboard for Cortex-A8" \
		-S -gdb tcp::10001,ipv4 \
		-show-cursor -rtc base=localtime -serial stdio \
		-sd "$(QEMU_DIR)/sdcard/sdcard.img" \
		-net nic,macaddr=88:88:88:11:22:33,model=lan9118 -net user \
		-kernel system || true
endif
